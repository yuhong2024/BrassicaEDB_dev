<template>
  <div class="transcript-page">
    <!-- 面包屑导航 -->
    <div class="breadcrumb-container">
      <div class="breadcrumb-left">
        <h2>Transcript Expression</h2>
      </div>
      <div class="breadcrumb-right">
        <el-breadcrumb separator="/">
          <el-breadcrumb-item to="/">Home</el-breadcrumb-item>
          <el-breadcrumb-item to="/analysis">Analysis</el-breadcrumb-item>
          <el-breadcrumb-item>Transcript Expression</el-breadcrumb-item>
        </el-breadcrumb>
      </div>
    </div>

    <!-- Introduction 板块 -->
    <el-card class="intro-card">
      <div class="intro-content">
        <img
            src="https://assets.entrepreneur.com/content/3x2/2000/20150825183914-dna-science-double-helix-.jpeg"
            alt="Brassica Image"
            class="intro-image"
        />
        <div class="intro-text">
          <h2>Transcript Expression</h2>
          <p>
            The transcriptome level provides Brassica researchers with a comprehensive and
            user-friendly interactive tool for gene expression profiling data, the Brassica
            Expression Database (BrassicaEDB). Using this database, researchers can quickly
            retrieve target gene expression level data, elucidate gene function, and advance
            Brassica breeding at the transcriptome level.
          </p>
        </div>
      </div>
    </el-card>

    <!-- 搜索功能块（卡片式布局） -->
    <el-card class="search-card">
      <h3>基因表达搜索</h3>
      <el-form :model="form" label-width="100px">
        <!-- 输入基因ID -->
        <el-form-item label="输入基因ID">
          <el-input
              type="textarea"
              v-model="form.geneIds"
              rows="6"
              placeholder="每行一个基因ID"
              resize="none"
          ></el-input>
        </el-form-item>

        <!-- 选择物种 -->
        <el-form-item label="选择物种">
          <el-select v-model="form.species" placeholder="选择物种">
            <el-option label="Species" value="test"></el-option>
            <el-option label="Species A" value="species_a"></el-option>
            <el-option label="Species B" value="species_b"></el-option>
          </el-select>
        </el-form-item>

        <!-- 提交按钮，点击后绘制图表并下载数据 -->
        <el-form-item>
          <el-button type="primary" @click="handleSearch">
            Search
          </el-button>
        </el-form-item>
      </el-form>

      <!-- 如果有返回文件显示下载按钮 -->
      <div v-if="downloadLink" class="download-section">
        <el-divider></el-divider>
        <h4>Result</h4>
        <el-button type="success" icon="el-icon-download" @click="downloadFile">
          Download
        </el-button>
      </div>
    </el-card>

    <!-- 图表显示区域 -->
    <div v-if="showCharts">
      <!-- 热图 -->
      <el-card class="card">
        <h2 class="card-title">热图</h2>
        <Heatmap />
      </el-card>

      <!-- 趋势图 -->
      <el-card class="card">
        <h2 class="card-title">趋势图</h2>
        <TendencyChart />
      </el-card>

      <!-- 箱线图 -->
      <el-card class="card">
        <h2 class="card-title">箱线图</h2>
        <BoxPlot />
      </el-card>

      <!-- 分面柱状图 -->
      <el-card class="card">
        <h2 class="card-title">分面柱状图</h2>
        <FacetPlot ref="facetPlotComponent" />
      </el-card>
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue';
import axios from 'axios';

// 导入图表组件
import Heatmap from '@/components/analysis/expression/test/Heatmap.vue';
import TendencyChart from '@/components/analysis/expression/test/TendencyChart.vue';
import BoxPlot from '@/components/analysis/expression/test/BoxPlot.vue';
import FacetPlot from '@/components/analysis/expression/test/FacetPlot.vue'; // 引入 FacetPlot 组件

// 初始化状态
const form = ref({
  species: 'test',
  geneIds: `BnaA01G0000100ZS\nBnaA01G0000200ZS\nBnaA01G0000300ZS\nBnaA01G0000400ZS\nBnaA01G0000500ZS\nBnaA01G0000600ZS`
});

const showCharts = ref(false);
const downloadLink = ref(null); // 下载链接
const facetPlotComponent = ref(null); // 分面图组件的 ref

// 触发搜索并绘制图表
const handleSearch = () => {
  showCharts.value = true;  // 显示图表
  facetPlotComponent.value.drawFacetPlot(); // 调用分面图绘图方法
  fetchTranscriptome();     // 模拟数据下载逻辑
};

// 模拟数据下载方法（本地数据）
const fetchTranscriptome = async () => {
  try {
    // 模拟发送请求
    const geneIdsArray = form.value.geneIds.split('\n').map(id => id.trim()).filter(id => id);

    const formData = {
      species: form.value.species,
      gene_ids: geneIdsArray,
    };

    // 配置POST请求
    const config = {
      method: 'post',
      url: 'https://brassica.wangyuhong.cn/api/transcriptome/',  // 如果你需要使用API，可以保留这个URL
      headers: {
        'Content-Type': 'multipart/form-data',
      },
      responseType: 'blob',
      data: formData,
    };

    // 模拟请求并获取下载文件
    const response = await axios(config);
    const blob = new Blob([response.data], { type: 'application/zip' });
    downloadLink.value = URL.createObjectURL(blob);
  } catch (error) {
    console.error(error);
    alert('请求失败，请检查API和输入数据');
  }
};

// 下载文件
const downloadFile = () => {
  const link = document.createElement('a');
  link.href = downloadLink.value;
  link.setAttribute('download', 'transcriptome_data.zip');
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
};
</script>

<style scoped>
.transcript-page {
  padding: 20px;
}

.breadcrumb-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
}

.intro-card,
.search-card {
  margin-bottom: 20px;
}

.card {
  padding: 20px;
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
}

.card-title {
  margin-bottom: 20px;
  font-size: 20px;
  font-weight: bold;
  text-align: center;
}

.intro-content {
  display: flex;
  align-items: center;
}

.intro-image {
  width: 120px;
  height: auto;
  margin-right: 20px;
  border-radius: 8px;
}

.download-section {
  margin-top: 20px;
  text-align: center;
}

.draw-btn {
  margin-bottom: 30px;
  padding: 10px 20px;
  font-size: 16px;
  background-color: #42b983;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}
</style>
